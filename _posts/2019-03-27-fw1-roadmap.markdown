---
layout: post
title: "FW/1 Roadmap"
date: 2019-03-27 20:15
comments: true
categories: [releases, fw1, di1, aop1]
author: Sean Corfield
---
## BREAKING NEWS!! Updated March 28th, 2019

After seeing this blog post, [Steven Neiland](https://github.com/sneiland) stepped up to take over maintenance of the framework! He has been a long-time user of FW/1 and designed the "2.0" version of subsystems four years ago. I'm looking forward to working with Steven to ensure a smooth hand-off over the next few months. Thank you!

## State of the FW/1 Union

It's been a year now since [FW/1 4.2.0](https://github.com/framework-one/fw1/releases/tag/v4.2.0) was released so I wanted to revisit the [roadmap document](http://framework-one.github.io/documentation/4.2/roadmap.html) from that time. At the end of December 2018, I posted to the FW/1 channel on the CFML Slack (and to the FW/1 mailing list) that my involvement with CFML and FW/1 was coming to an end. I've asked, several times over the years, for new maintainers to step up for FW/1. Nolan Erck has permissions on the GitHub organization (as owner) but I'm not expecting him to lead development as he has a lot of other things on his plate. At this point, FW/1 is extremely stable and (fairly) well-documented. 4.0.0 was released in Fall 2016. There have been (minor) maintenance releases each year since (4.1.0 in July '17 and 4.2.0 at the end of March '18).

There have been two very small enhancements on the develop branch since then (thank you Carl Von Stetten and Matthew Clemente) but not enough to warrant a new release (and, with CommandBox, it's easy enough to install that branch anyway: `box install fw1@be`). At this point, unless one or more genuinely proactive and engaged maintainers come forward, 4.2.0 will probably be the last official release of the framework.

## The Roadmap

The roadmap document (linked above) talks about a refactoring of the lifecycle functionality that was intended to simplify `Application.cfc` and the "Alternative Application Structure" in current FW/1 apps but it would ultimately have been a significant breaking change (hence the mention of an intermediate 4.5 migration release before the breaking 5.0 release). Since that was mostly driven by my architectural preferences, I don't see any value in any new maintainers following that path -- I never fleshed out, on paper, what that should look like so I'm going to close out the associated GitHub issue for it. Making subsystems more self-contained and more "pluggable" probably should be a goal for any new maintainers, but tackled more incrementally. Beyond that, I don't know what should be on a roadmap now: perhaps minimal, careful maintenance to fix bugs and stay compatible with new versions of Lucee and Adobe ColdFusion is all that is really needed?

## My Road to Here

I've made no secret of how my work has transitioned from CFML to Clojure over the last roughly nine years. I initially ported FW/1 to Clojure but then decided to sunset that port, as it became clear that FW/1 added very little value to a (simpler) combination of the Ring, Compojure, Component, and Selmer libraries. At work, we ported our CFML FW/1 apps to Clojure FW/1 apps and then to plain Clojure apps a few years ago. Our primary CFML app -- built with ColdBox -- was retired completely this month, in favor of a React.js-based front end and a Clojure-based back end. We have two ColdBox apps remaining: a small, customer-facing app that we plan to redesign and rebuild (in Clojure) over the next year, and a medium-sized internal "administration" app that we started migrating to Clojure last year. We've gone from four servers running Lucee to just one, and expect to retire that before year end.

I got started with CFML over seventeen years ago, when my then-employer Macromedia acquired Allaire, and as a technology it has been good to me throughout that time -- at Macromedia, at Adobe, as a freelancer, at Broadchoice (Flex, Groovy, and Railo), as part of Railo Inc, as a freelancer again, and for several years at [World Singles Networks](https://worldsinglesnetworks.com) where I also found myself writing Scala for a year or so and then Clojure. The CFML community is one of the friendliest, most supportive technology groups I've met, in a career that spans back to the early 80's, and I've missed seeing my CFML friends at conferences as my work focus has shifted -- it's been six years now since I last attended a CFML conference!

I expect I'll still lurk on the CFML Slack for quite a while, and I'll stay subscribed to the FW/1 mailing list -- forever, I expect -- so folks can still reach me for FW/1 and CFML questions and general chit-chat.
